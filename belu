
local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v82=0;local v83;while true do if (v82==0) then v83=v2(v0(v30,16));if v19 then local v97=v5(v83,v19);v19=nil;return v97;else return v83;end break;end end end end);local function v20(v31,v32,v33)if v33 then local v84=0 -0 ;local v85;while true do if (v84==(0 -0)) then v85=(v31/(2^(v32-(1 -0))))%((4 -(2 + 0))^(((v33-(620 -((790 -235) + 64))) -(v32-1)) + (932 -(857 + (1139 -(68 + 997)))))) ;return v85-(v85%1) ;end end else local v86=568 -(367 + 201) ;local v87;while true do if (v86==(927 -(214 + 713))) then v87=(1 + 1)^(v32-(1 + 0)) ;return (((v31%(v87 + v87))>=v87) and ((2148 -(226 + 1044)) -(282 + 595))) or (1637 -(1523 + 114)) ;end end end end local function v21()local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22()local v35,v36=v1(v16,v18,v18 + (8 -6) );v18=v18 + 2 ;return (v36 * (373 -(32 + 85))) + v35 ;end local function v23()local v37=0 + 0 + 0 ;local v38;local v39;local v40;local v41;while true do if (v37==(1 + 0)) then return (v41 * (16778173 -(892 + 65))) + (v40 * (156337 -90801)) + (v39 * (472 -216)) + v38 ;end if (v37==(0 -0)) then v38,v39,v40,v41=v1(v16,v18,v18 + 3 );v18=v18 + ((868 -514) -(87 + 194 + 69)) ;v37=181 -(67 + 113) ;end end end local function v24()local v42=v23();local v43=v23();local v44=(9 -6) -2 ;local v45=(v20(v43,1,972 -(802 + 150) ) * ((5 -3)^(57 -(11 + 14)))) + v42 ;local v46=v20(v43,16 + (8 -3) ,1028 -(915 + 82) );local v47=((v20(v43,90 -58 )==(439 -(145 + 293))) and  -(1 + 0)) or (1 -0) ;if (v46==(1187 -(1069 + 118))) then if (v45==(0 -0)) then return v47 * (0 -0) ;else v46=1 + 0 ;v44=0 -0 ;end elseif (v46==(2031 + 16)) then return ((v45==(791 -(368 + 423))) and (v47 * ((3 -2)/(18 -(10 + 8))))) or (v47 * NaN) ;end return v8(v47,v46-(3934 -(3341 -(44 + 386))) ) * (v44 + (v45/(2^((1980 -(998 + 488)) -(416 + 26))))) ;end local function v25(v48)local v49;if  not v48 then local v88=0 + 0 ;while true do if (v88==(0 + 0)) then v48=v23();if (v48==(772 -(201 + 571))) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -(4 -3) );v18=v18 + v48 ;local v50={};for v66=1139 -(116 + 1022) , #v49 do v50[v66]=v2(v1(v3(v49,v66,v66)));end return v6(v50);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v51=0 -0 ;local v52;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v51==0) then v52=0;v53=nil;v51=1;end if (v51~=(121 -(30 + 90))) then else v54=nil;v55=nil;v51=2;end if (v51==2) then v56=nil;v57=nil;v51=3;end if (v51==(1 + 3)) then while true do if (v52~=(2 + 1)) then else v59=nil;while true do local v98=0 + 0 ;local v99;while true do if (v98==0) then v99=0 + 0 ;while true do if (v99==1) then if ((6 -3)~=v53) then else local v169=0 -0 ;while true do if ((0 -0)==v169) then for v332=1,v23() do v55[v332-1 ]=v28();end return v57;end end end if ((1 + 0)~=v53) then else local v170=0;local v171;while true do if (0==v170) then v171=0 + 0 ;while true do if (v171~=1) then else v59={};v53=2;break;end if (v171~=(396 -(115 + 281))) then else v57={v54,v55,nil,v56};v58=v23();v171=1 + 0 ;end end break;end end end break;end if (v99~=0) then else if (v53~=(0 -0)) then else local v172=0;local v173;while true do if (v172~=(0 -0)) then else v173=0;while true do if (0~=v173) then else v54={};v55={};v173=868 -(550 + 317) ;end if (v173==1) then v56={};v53=1;break;end end break;end end end if (v53==2) then local v174=0 -0 ;while true do if (v174==(1 -0)) then for v334=2 -1 ,v23() do local v335=285 -(134 + 151) ;local v336;local v337;local v338;while true do if (v335==1) then v338=nil;while true do if (v336==(1666 -(970 + 695))) then while true do if (v337~=0) then else v338=v21();if (v20(v338,1,1 -0 )~=0) then else local v389=0;local v390;local v391;local v392;while true do if (v389==(1990 -(582 + 1408))) then local v393=0 -0 ;local v394;while true do if (v393==(0 -0)) then v394=0 -0 ;while true do if (v394~=(1825 -(1195 + 629))) then else v389=1 -0 ;break;end if (v394==0) then local v405=0;while true do if (v405==(242 -(187 + 54))) then v394=1;break;end if (v405~=0) then else v390=v20(v338,2,3);v391=v20(v338,784 -(162 + 618) ,6);v405=1 + 0 ;end end end end break;end end end if (v389==1) then local v395=0;while true do if ((0 + 0)==v395) then v392={v22(),v22(),nil,nil};if (v390==0) then local v403=1636 -(1373 + 263) ;local v404;while true do if (v403~=(1000 -(451 + 549))) then else v404=0 + 0 ;while true do if (0==v404) then v392[3]=v22();v392[5 -1 ]=v22();break;end end break;end end elseif (v390==1) then v392[3]=v23();elseif (v390==2) then v392[3]=v23() -((2 -0)^(1400 -(746 + 638))) ;elseif (v390==(2 + 1)) then local v410=0;local v411;while true do if (0==v410) then v411=0 -0 ;while true do if (v411==(341 -(218 + 123))) then v392[1584 -(1535 + 46) ]=v23() -(2^(16 + 0)) ;v392[1 + 3 ]=v22();break;end end break;end end end v395=561 -(306 + 254) ;end if ((1 + 0)==v395) then v389=2;break;end end end if (v389==(3 -1)) then if (v20(v391,1468 -(899 + 568) ,1)~=(1 + 0)) then else v392[4 -2 ]=v59[v392[2]];end if (v20(v391,2,2)~=1) then else v392[3]=v59[v392[3]];end v389=3;end if (v389==3) then if (v20(v391,606 -(268 + 335) ,3)~=(291 -(60 + 230))) then else v392[576 -(426 + 146) ]=v59[v392[1 + 3 ]];end v54[v334]=v392;break;end end end break;end end break;end if (v336==(1456 -(282 + 1174))) then local v384=811 -(569 + 242) ;while true do if (v384~=(2 -1)) then else v336=1 + 0 ;break;end if (v384==0) then local v388=0;while true do if (v388~=(1025 -(706 + 318))) then else v384=1252 -(721 + 530) ;break;end if (v388==(1271 -(945 + 326))) then v337=0 -0 ;v338=nil;v388=1;end end end end end end break;end if ((0 + 0)==v335) then v336=700 -(271 + 429) ;v337=nil;v335=1 + 0 ;end end end v53=3;break;end if (0==v174) then for v339=1,v58 do local v340=0;local v341;local v342;while true do if (v340~=0) then else v341=v21();v342=nil;v340=1;end if (v340==1) then if (v341==(1501 -(1408 + 92))) then v342=v21()~=(1086 -(461 + 625)) ;elseif (v341==2) then v342=v24();elseif (v341==3) then v342=v25();end v59[v339]=v342;break;end end end v57[1291 -(993 + 295) ]=v21();v174=1;end end end v99=1 + 0 ;end end break;end end end break;end if (v52~=0) then else v53=0;v54=nil;v52=1;end if (v52~=1) then else v55=nil;v56=nil;v52=1173 -(418 + 753) ;end if (v52~=(1 + 1)) then else local v96=0;while true do if (v96==1) then v52=3;break;end if (0==v96) then v57=nil;v58=nil;v96=1 + 0 ;end end end end break;end if (v51==3) then v58=nil;v59=nil;v51=2 + 2 ;end end end local function v29(v60,v61,v62)local v63=v60[1];local v64=v60[2];local v65=v60[3];return function(...)local v68=v63;local v69=v64;local v70=v65;local v71=v27;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v89=0,v76 do if (v89>=v70) then v74[v89-v70 ]=v75[v89 + 1 ];else v78[v89]=v75[v89 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1];if (v81<=43) then if (v81<=21) then if (v81<=10) then if (v81<=4) then if (v81<=1) then if (v81==0) then v78[v80[2]]=v78[v80[3]][v80[4]];else local v102=v80[2];v78[v102](v13(v78,v102 + 1 ,v80[3]));end elseif (v81<=2) then local v103=v80[2];local v104=v78[v103];for v175=v103 + 1 ,v73 do v7(v104,v78[v175]);end elseif (v81==3) then local v200=0;local v201;while true do if (v200==0) then v201=v80[2];v78[v201](v13(v78,v201 + 1 ,v80[3]));break;end end else v78[v80[2]]=v80[3]~=0 ;end elseif (v81<=7) then if (v81<=5) then local v105=v80[2];local v106,v107=v71(v78[v105](v13(v78,v105 + 1 ,v73)));v73=(v107 + v105) -1 ;local v108=0;for v176=v105,v73 do v108=v108 + 1 ;v78[v176]=v106[v108];end elseif (v81==6) then local v203=v69[v80[3]];local v204;local v205={};v204=v10({},{__index=function(v284,v285)local v286=0;local v287;while true do if (v286==0) then v287=v205[v285];return v287[1][v287[2]];end end end,__newindex=function(v288,v289,v290)local v291=0;local v292;while true do if (v291==0) then v292=v205[v289];v292[1][v292[2]]=v290;break;end end end});for v293=1,v80[4] do local v294=0;local v295;while true do if (v294==0) then v72=v72 + 1 ;v295=v68[v72];v294=1;end if (v294==1) then if (v295[1]==58) then v205[v293-1 ]={v78,v295[3]};else v205[v293-1 ]={v61,v295[3]};end v77[ #v77 + 1 ]=v205;break;end end end v78[v80[2]]=v29(v203,v204,v62);else local v207=v80[2];v78[v207]=v78[v207]();end elseif (v81<=8) then local v109=0;local v110;local v111;local v112;local v113;while true do if (v109==2) then for v306=v110,v73 do v113=v113 + 1 ;v78[v306]=v111[v113];end break;end if (v109==0) then v110=v80[2];v111,v112=v71(v78[v110](v78[v110 + 1 ]));v109=1;end if (1==v109) then v73=(v112 + v110) -1 ;v113=0;v109=2;end end elseif (v81==9) then v78[v80[2]]=v80[3] + v78[v80[4]] ;elseif (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=15) then if (v81<=12) then if (v81>11) then v78[v80[2]]=v78[v80[3]]%v80[4] ;else local v115=v80[2];do return v78[v115](v13(v78,v115 + 1 ,v80[3]));end end elseif (v81<=13) then local v116=v80[2];local v117,v118=v71(v78[v116](v13(v78,v116 + 1 ,v73)));v73=(v118 + v116) -1 ;local v119=0;for v179=v116,v73 do local v180=0;while true do if (v180==0) then v119=v119 + 1 ;v78[v179]=v117[v119];break;end end end elseif (v81==14) then v78[v80[2]]=v80[3]~=0 ;else v78[v80[2]]=v78[v80[3]]%v80[4] ;end elseif (v81<=18) then if (v81<=16) then v78[v80[2]][v78[v80[3]]]=v80[4];elseif (v81>17) then v78[v80[2]]=v29(v69[v80[3]],nil,v62);else v78[v80[2]]= #v78[v80[3]];end elseif (v81<=19) then local v122=v80[2];v78[v122]=v78[v122]();elseif (v81==20) then v78[v80[2]]=v80[3] + v78[v80[4]] ;else local v215=v80[2];local v216=v78[v215];local v217=v78[v215 + 2 ];if (v217>0) then if (v216>v78[v215 + 1 ]) then v72=v80[3];else v78[v215 + 3 ]=v216;end elseif (v216<v78[v215 + 1 ]) then v72=v80[3];else v78[v215 + 3 ]=v216;end end elseif (v81<=32) then if (v81<=26) then if (v81<=23) then if (v81>22) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else local v124=v69[v80[3]];local v125;local v126={};v125=v10({},{__index=function(v181,v182)local v183=0;local v184;while true do if (v183==0) then v184=v126[v182];return v184[1][v184[2]];end end end,__newindex=function(v185,v186,v187)local v188=v126[v186];v188[1][v188[2]]=v187;end});for v190=1,v80[4] do local v191=0;local v192;while true do if (v191==0) then v72=v72 + 1 ;v192=v68[v72];v191=1;end if (v191==1) then if (v192[1]==58) then v126[v190-1 ]={v78,v192[3]};else v126[v190-1 ]={v61,v192[3]};end v77[ #v77 + 1 ]=v126;break;end end end v78[v80[2]]=v29(v124,v125,v62);end elseif (v81<=24) then if  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>25) then local v220=0;local v221;local v222;local v223;local v224;while true do if (v220==2) then for v358=v221,v73 do v224=v224 + 1 ;v78[v358]=v222[v224];end break;end if (v220==0) then v221=v80[2];v222,v223=v71(v78[v221](v13(v78,v221 + 1 ,v80[3])));v220=1;end if (v220==1) then v73=(v223 + v221) -1 ;v224=0;v220=2;end end else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81<=29) then if (v81<=27) then local v128=v80[2];do return v13(v78,v128,v73);end elseif (v81==28) then v78[v80[2]]= not v78[v80[3]];else v78[v80[2]]();end elseif (v81<=30) then v78[v80[2]][v78[v80[3]]]=v78[v80[4]];elseif (v81>31) then v78[v80[2]]=v78[v80[3]][v80[4]];else v78[v80[2]][v80[3]]=v78[v80[4]];end elseif (v81<=37) then if (v81<=34) then if (v81>33) then v78[v80[2]]=v78[v80[3]];else v78[v80[2]]={};end elseif (v81<=35) then v78[v80[2]]={};elseif (v81==36) then v78[v80[2]]=v78[v80[3]] + v80[4] ;else v72=v80[3];end elseif (v81<=40) then if (v81<=38) then v61[v80[3]]=v78[v80[2]];elseif (v81==39) then local v234=v80[2];local v235=v78[v80[3]];v78[v234 + 1 ]=v235;v78[v234]=v235[v80[4]];else v78[v80[2]]=v62[v80[3]];end elseif (v81<=41) then do return;end elseif (v81==42) then v78[v80[2]]=v62[v80[3]];else local v243=v80[2];v78[v243](v78[v243 + 1 ]);end elseif (v81<=65) then if (v81<=54) then if (v81<=48) then if (v81<=45) then if (v81>44) then local v137=0;local v138;local v139;local v140;while true do if (v137==0) then v138=v80[2];v139=v78[v138 + 2 ];v137=1;end if (v137==1) then v140=v78[v138] + v139 ;v78[v138]=v140;v137=2;end if (v137==2) then if (v139>0) then if (v140<=v78[v138 + 1 ]) then local v364=0;while true do if (v364==0) then v72=v80[3];v78[v138 + 3 ]=v140;break;end end end elseif (v140>=v78[v138 + 1 ]) then local v365=0;while true do if (v365==0) then v72=v80[3];v78[v138 + 3 ]=v140;break;end end end break;end end elseif (v78[v80[2]]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=46) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>47) then local v246=v80[2];local v247=v78[v80[3]];v78[v246 + 1 ]=v247;v78[v246]=v247[v80[4]];else v78[v80[2]]= #v78[v80[3]];end elseif (v81<=51) then if (v81<=49) then v78[v80[2]]=v78[v80[3]] + v80[4] ;elseif (v81>50) then v78[v80[2]]=v80[3];else v61[v80[3]]=v78[v80[2]];end elseif (v81<=52) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>53) then local v257=v80[2];v78[v257](v13(v78,v257 + 1 ,v73));else v72=v80[3];end elseif (v81<=59) then if (v81<=56) then if (v81>55) then v78[v80[2]]= not v78[v80[3]];else v78[v80[2]]=v61[v80[3]];end elseif (v81<=57) then local v145=v80[2];local v146,v147=v71(v78[v145](v13(v78,v145 + 1 ,v80[3])));v73=(v147 + v145) -1 ;local v148=0;for v193=v145,v73 do local v194=0;while true do if (v194==0) then v148=v148 + 1 ;v78[v193]=v146[v148];break;end end end elseif (v81==58) then v78[v80[2]]=v78[v80[3]];else local v261=v80[2];local v262={};for v300=1, #v77 do local v301=v77[v300];for v317=0, #v301 do local v318=v301[v317];local v319=v318[1];local v320=v318[2];if ((v319==v78) and (v320>=v261)) then local v361=0;while true do if (v361==0) then v262[v320]=v319[v320];v318[1]=v262;break;end end end end end end elseif (v81<=62) then if (v81<=60) then local v149=v80[2];local v150=v78[v149];local v151=v78[v149 + 2 ];if (v151>0) then if (v150>v78[v149 + 1 ]) then v72=v80[3];else v78[v149 + 3 ]=v150;end elseif (v150<v78[v149 + 1 ]) then v72=v80[3];else v78[v149 + 3 ]=v150;end elseif (v81>61) then if (v80[2]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end else for v302=v80[2],v80[3] do v78[v302]=nil;end end elseif (v81<=63) then if  not v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81>64) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else local v264=v80[2];v78[v264]=v78[v264](v13(v78,v264 + 1 ,v73));end elseif (v81<=76) then if (v81<=70) then if (v81<=67) then if (v81==66) then local v152=v80[2];v78[v152]=v78[v152](v13(v78,v152 + 1 ,v80[3]));else local v154=v80[2];v78[v154](v13(v78,v154 + 1 ,v73));end elseif (v81<=68) then local v155=v80[2];local v156=v78[v155 + 2 ];local v157=v78[v155] + v156 ;v78[v155]=v157;if (v156>0) then if (v157<=v78[v155 + 1 ]) then v72=v80[3];v78[v155 + 3 ]=v157;end elseif (v157>=v78[v155 + 1 ]) then v72=v80[3];v78[v155 + 3 ]=v157;end elseif (v81==69) then v78[v80[2]]=v80[3];elseif (v78[v80[2]]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=73) then if (v81<=71) then local v159=v80[2];v78[v159](v78[v159 + 1 ]);elseif (v81>72) then local v268=v80[2];local v269=v78[v268];for v304=v268 + 1 ,v73 do v7(v269,v78[v304]);end else local v270=0;local v271;while true do if (0==v270) then v271=v80[2];do return v13(v78,v271,v73);end break;end end end elseif (v81<=74) then v78[v80[2]]=v29(v69[v80[3]],nil,v62);elseif (v81==75) then v78[v80[2]]=v78[v80[3]]%v78[v80[4]] ;else local v273=v80[2];v78[v273]=v78[v273](v13(v78,v273 + 1 ,v80[3]));end elseif (v81<=81) then if (v81<=78) then if (v81>77) then v78[v80[2]][v78[v80[3]]]=v80[4];else local v163=v80[2];local v164,v165=v71(v78[v163](v78[v163 + 1 ]));v73=(v165 + v163) -1 ;local v166=0;for v195=v163,v73 do v166=v166 + 1 ;v78[v195]=v164[v166];end end elseif (v81<=79) then for v198=v80[2],v80[3] do v78[v198]=nil;end elseif (v81==80) then local v275=v80[2];do return v78[v275](v13(v78,v275 + 1 ,v80[3]));end else v78[v80[2]]=v61[v80[3]];end elseif (v81<=84) then if (v81<=82) then local v167=v80[2];v78[v167]=v78[v167](v13(v78,v167 + 1 ,v73));elseif (v81==83) then v78[v80[2]][v78[v80[3]]]=v78[v80[4]];else v78[v80[2]]=v78[v80[3]]%v78[v80[4]] ;end elseif (v81<=85) then v78[v80[2]]();elseif (v81==86) then do return;end else local v281=0;local v282;local v283;while true do if (1==v281) then for v362=1, #v77 do local v363=v77[v362];for v366=0, #v363 do local v367=0;local v368;local v369;local v370;while true do if (0==v367) then v368=v363[v366];v369=v368[1];v367=1;end if (v367==1) then v370=v368[2];if ((v369==v78) and (v370>=v282)) then v283[v370]=v369[v370];v368[1]=v283;end break;end end end end break;end if (v281==0) then v282=v80[2];v283={};v281=1;end end end v72=v72 + 1 ;end end;end return v29(v28(),{},v17)(...);end vv9(),...);
